{"version":3,"sources":["Components/Header.js","Components/Addcontact.js","Components/Contactcard.js","Components/Contactlist.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","AddContact","state","name","email","add","e","preventDefault","props","addContactHandler","setState","alert","onSubmit","this","type","placeholder","value","onChange","target","React","Component","Contactcard","contact","style","color","onClick","clickHandler","id","Contactlist","deleteContactHandler","getContactId","rendercontactlist","contacts","map","App","LOCAL_STORAGE_KEY","useState","setcontacts","useEffect","retrivecontacts","JSON","parse","localStorage","getItem","setItem","stringify","Addcontact","uuid","newContactList","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAEe,SAASA,IACpB,OACI,mCACA,qBAAKC,UAAU,gBAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,uD,uCCLVC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,I,EAGTC,IAAM,SAACC,GACLA,EAAEC,iBACsB,KAApB,EAAKL,MAAMC,MAAoC,KAArB,EAAKD,MAAME,OAIzC,EAAKI,MAAMC,kBAAkB,EAAKP,OAClC,EAAKQ,SAAS,CAAEP,KAAM,GAAIC,MAAO,MAJ/BO,MAAM,kC,4CAMV,WAAU,IAAD,OACP,OACE,sBAAKX,UAAU,UAAf,UACE,6CACA,uBAAMA,UAAU,UAAUY,SAAUC,KAAKR,IAAzC,UACE,sBAAKL,UAAU,QAAf,UACE,yCACA,uBACEc,KAAK,OACLX,KAAK,OACLY,YAAY,OACZC,MAAOH,KAAKX,MAAMC,KAClBc,SAAU,SAACX,GAAD,OAAO,EAAKI,SAAS,CAAEP,KAAMG,EAAEY,OAAOF,cAGpD,sBAAKhB,UAAU,QAAf,UACE,0CACA,uBACEc,KAAK,OACLX,KAAK,QACLY,YAAY,QACZC,MAAOH,KAAKX,MAAME,MAClBa,SAAU,SAACX,GAAD,OAAO,EAAKI,SAAS,CAAEN,MAAOE,EAAEY,OAAOF,cAGrD,wBAAQhB,UAAU,iBAAlB,2B,GAxCemB,IAAMC,WA+ChBnB,IC/CA,SAASoB,EAAYb,GAChC,OACI,qBAAKR,UAAU,OAAf,SACK,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,SAAf,SAAyBQ,EAAMc,QAAQnB,OACvC,qBAAKH,UAAU,GAAf,SAAmBQ,EAAMc,QAAQlB,QACjC,mBAAGmB,MAAO,CAACC,MAAM,OAAQxB,UAAU,+BAClCyB,QAAS,kBAAIjB,EAAMkB,aAAalB,EAAMc,QAAQK,YCNjD,SAASC,EAAYpB,GAEhC,IAAMqB,EAAqB,SAACF,GACxBnB,EAAMsB,aAAaH,IAEjBI,EAAmBvB,EAAMwB,SAASC,KAAI,SAACX,GAEzC,OACI,cAACD,EAAD,CAAaC,QAASA,EAASI,aAAcG,GAA2BP,EAAQK,OAIxF,OACI,mCACA,sBAAK3B,UAAU,iBAAf,UACI,8CACgB+B,OCmBbG,MA/Bf,WACE,IAAMC,EAAoB,WAC1B,EAAgCC,mBAAS,IAAzC,mBAAOJ,EAAP,KAAiBK,EAAjB,KAoBA,OAPAC,qBAAU,WACR,IAAMC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQR,IACpDI,GAAiBF,EAAYE,KAChC,IACHD,qBAAU,WACRI,aAAaE,QAAQT,EAAmBK,KAAKK,UAAUb,MACtD,CAACA,IAEF,sBAAKhC,UAAU,eAAf,UACE,cAACD,EAAD,IACA,cAAC+C,EAAD,CAAYrC,kBAtBU,SAACa,GAEzBe,EAAY,GAAD,mBAAKL,GAAL,cAAiBL,GAAIoB,kBAAWzB,SAqBzC,cAACM,EAAD,CAAaI,SAAUA,EAAUF,aAlBR,SAACH,GAC5B,IAAMqB,EAAiBhB,EAASiB,QAAO,SAAC3B,GACtC,OAAOA,EAAQK,KAAOA,KAExBU,EAAYW,UCPDE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5d0481f6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header(){\r\n    return(\r\n        <>\r\n        <div className=\"ui fixed menu\">\r\n            <div className=\"ui container center\">\r\n                <h2>Contact Manager</h2>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\n\r\nclass AddContact extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n  };\r\n\r\n  add = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.name === \"\" || this.state.email === \"\") {\r\n      alert(\"ALl the fields are mandatory!\");\r\n      return;\r\n    }\r\n    this.props.addContactHandler(this.state);\r\n    this.setState({ name: \"\", email: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui main\">\r\n        <h2>Add Contact</h2>\r\n        <form className=\"ui form\" onSubmit={this.add}>\r\n          <div className=\"field\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              value={this.state.name}\r\n              onChange={(e) => this.setState({ name: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={this.state.email}\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n            />\r\n          </div>\r\n          <button className=\"ui button blue\">Add</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React from \"react\";\r\n\r\nexport default function Contactcard(props){\r\n    return(\r\n        <div className=\"item\">\r\n             <div className=\"content\">\r\n                 <div className=\"header\">{props.contact.name}</div>\r\n                 <div className=\"\">{props.contact.email}</div>\r\n                 <i style={{color:\"red\"}} className=\"trash alternate outline icon\"\r\n                  onClick={()=>props.clickHandler(props.contact.id)}\r\n                 ></i>\r\n             </div>\r\n            </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Contactcard from \"./Contactcard\";\r\n\r\nexport default function Contactlist(props){\r\n\r\n    const deleteContactHandler=(id)=>{\r\n        props.getContactId(id);\r\n    }\r\n    const rendercontactlist= props.contacts.map((contact)=>{\r\n\r\n        return(\r\n            <Contactcard contact={contact} clickHandler={deleteContactHandler} key={contact.id}></Contactcard>\r\n        )\r\n\r\n    })\r\n    return(\r\n        <>\r\n        <div className=\"ui celled list\">\r\n            <h2>Contact list</h2>\r\n                           {rendercontactlist}\r\n        </div>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport { uuid } from 'uuidv4';\nimport Header from './Components/Header'\nimport './App.css';\nimport Addcontact from './Components/Addcontact';\nimport Contactlist from './Components/Contactlist';\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setcontacts] = useState([]);\n  const addContactHandler = (contact) => {\n\n    setcontacts([...contacts, { id: uuid(), ...contact }]);\n  }\n\n  const removeContactHandler = (id) => {\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    })\n    setcontacts(newContactList);\n  }\n\n  useEffect(() => {\n    const retrivecontacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (retrivecontacts) setcontacts(retrivecontacts);\n  }, [])\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts))\n  }, [contacts])\n  return (\n    <div className=\"ui container\">\n      <Header />\n      <Addcontact addContactHandler={addContactHandler}></Addcontact>\n      <Contactlist contacts={contacts} getContactId={removeContactHandler} />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}